import chalk from 'chalk'
import logUpdate from 'log-update'
import config from 'config'

const baseUrl = config.get<string>('APP.BASE_URL')

const info = (message: string) => chalk.cyan(`[üîé] ${message}`)
const success = (message: string) => chalk.green(`[‚úÖ] ${message}`)
const successBold = (message: string) => chalk.bold.green(`${message}`)
const error = (message: string) => chalk.red(`[‚ùå] ${message}`)

const startingServer = () => {
  return new Promise((resolve) => {
    let counter = 0
    const interval = setInterval(() => {
      logUpdate(info(`–°–∞—É–Ω–¥—á–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞ [${'üéπ'.repeat(counter) + '‚¨õ'.repeat(10 - counter)}] ${counter * 10}%\n`))
      counter++
      if (counter === 11) {
        clearInterval(interval)

        resolve(1)
      }
    }, 200)
  })
}

const serverStarted = (port: number) => {
  console.log(success(`–°–∞—É–Ω–¥—á–µ–∫ –ø—Ä–æ–π–¥–µ—Ç. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—à–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: `) + successBold(`${baseUrl}:${port}\n\n`) + info('–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤...\n'));
}

const httpError = (status: number, url: string, message: string) => console.log(error(`–°—Ç–∞—Ç—É—Å: ${status} | URL: ${url} | –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`))


export const Logger = {
  startingServer,
  serverStarted,
  httpError
}